---
---

<div
  x-data="{ data: [] }"
  x-init="data = await (await fetch('https://jsonplaceholder.typicode.com/posts/')).json()"
>
  <ul role="list" class="link-card-grid">
    <template x-for="(dat, index) in data" :key="index">
      <li class="link-card">
        <a href="">
          <h2 x-text="dat.title">
            <span>&rarr;</span>
          </h2>
          <p x-text="dat.body"></p>
        </a>
      </li>
    </template>
  </ul>
</div>

<script>
  /*
import Alpine from 'alpinejs'

document.addEventListener('alpine:init', () => {
    Alpine.data('app', () => ({
      data: {},
      error: false,
      handleFetch() {
        fetch(`https://jsonplaceholder.typicode.com/posts/`)
          .then(response => {
            if (!response.ok) {
              this.error = true;
            }
            return response.json();
          })
          .then(json => {
          //console.log(json)
            this.data = json;
          })
          .catch(reason => {
            this.error = true;
          });
      }
    }));
  });
Alpine.start();
*/
</script>

<style>
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }

  .link-card {
    list-style: none;
    display: flex;
    padding: 1px;
    background-color: #23262d;
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: white;
    background-color: #23262d;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
</style>
